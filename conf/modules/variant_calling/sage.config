/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// SAGE

process {  // sage

    withName: '.*SAGE.*' {
        ext.when = { params.tools && params.tools.split(',').contains('sage') || params.step == "realignment" || params.tools && params.tools.split(',').contains('realignment')}
    }

    // SAGE
    withName: 'SAGE' {
        ext.args         = { params.sage_custom_args      ?:"" }
        ext.prefix       = { meta.num_intervals <= 1 ? "${meta.id}.sage_out" : "${meta.id}.sage_out.${intervals.simpleName}" }
        ext.when         = { params.tools && params.tools.split(',').contains('sage') }
        publishDir       = [
            enabled: false
        ]
    }

    withName: 'MERGE_SAGE' {
        ext.prefix       = {"${meta.id}.sage"}
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/sage/${meta.id}/" },
            pattern: "*{vcf.gz,vcf.gz.tbi}"
        ]
    }

    withName : 'TABIX_VC_SAGE' {
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/sage/${meta.id}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:BAM_VARIANT_CALLING_SOMATIC_SAGE:BCFTOOLS_SORT' {
        ext.prefix       = { meta.num_intervals <= 1 ? "${meta.id}.sage" : vcf.baseName - ".vcf" + ".sage.sort" }
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/variant_calling/" },
            pattern: "*{vcf.gz,vcf.gz.tbi}",
            saveAs: { meta.num_intervals > 1 ? null : "sage/${meta.id}/${it}" },
            enabled: true
        ]
    }

}
