/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/rnadnavar -profile test,<docker/singularity> --outdir <OUTDIR>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.5GB'
    max_time   = '2.h'

    // Input data
    input  = "${projectDir}/tests/csv/3.0/trbc_recalibrated.csv"
    outdir = 'rnadnavar_test_full'

    // Small reference genome
    step                 = "variant_calling"
    wes                  = true
    genome               = 'GRCh38'
    fasta                = 'https://raw.githubusercontent.com/nf-core/test-datasets/rnadnavar/reference/chr7_hg38/GRCh38.d1.vd1.chr7.mini.fa.gz'
    igenomes_ignore      = true
    dbsnp                = "https://raw.githubusercontent.com/nf-core/test-datasets/rnadnavar/reference/chr7_hg38/dbsnp_146.hg38.chr7.mini.vcf.gz"
    germline_resource    = "https://raw.githubusercontent.com/nf-core/test-datasets/rnadnavar/reference/chr7_hg38/af-only-gnomad.hg38.chr7.mini.vcf.gz"
    no_intervals         = true
    gtf                  = 'https://raw.githubusercontent.com/nf-core/test-datasets/rnadnavar/reference/chr7_hg38/gencode.v36.annotation.chr7.mini.gtf'
    sage_highconfidence  = 'https://github.com/nf-core/test-datasets/raw/rnadnavar/resources/hmftools/variants/HighConfidence.38.bed.gz'
    sage_actionablepanel = 'https://github.com/nf-core/test-datasets/raw/rnadnavar/resources/hmftools/variants/ActionableCodingPanel.38.bed.gz'
    sage_knownhotspots   = 'https://github.com/nf-core/test-datasets/raw/rnadnavar/resources/hmftools/variants/KnownHotspots.somatic.38.vcf.gz'
    sage_ensembl_dir     = 'https://github.com/nf-core/test-datasets/raw/rnadnavar/resources/hmftools/common/sage_ensembl.zip'
    // vep_cache            = 'https://github.com/nf-core/test-datasets/raw/rnadnavar/resources/vep/vep_hs.zip'
    vep_cache_version    = 111
    vep_species          = "homo_sapiens"
    vep_genome           = "GRCh38"
    download_cache       = true
    vep_include_fasta    = true


    // params
    split_fastq       = 50000         // no FASTQ splitting
    tools             = 'sage,strelka,mutect2,vep,norm,consensus,rescue,realignment,filtering,rna_filtering'

    // sage TODO: needs to be implemented
//    sage_tar = "https://storage.googleapis.com/hmf-public/HMFtools-Resources/dna_pipeline/v5_33/38/hmf_dna_pipeline_resources.38_v5.33.tar.gz"

    // Ignore params that will throw warning through params validation
    validationSchemaIgnoreParams = 'genomes'

}


// Enable container engines/virtualisation envs for CI testing
// only works when specified with the profile ENV
// otherwise tests can be done with the regular provided profiles
if (System.getenv('PROFILE')) {
    if ("$PROFILE" == "conda") {
        conda.createTimeout                      = "120 min"
        conda.enabled                            = true
        charliecloud.enabled                     = false
        docker.enabled                           = false
        podman.enabled                           = false
        shifter.enabled                          = false
        singularity.enabled                      = false
    } else if ("$PROFILE" == "docker") {
        conda.enabled                            = false
        docker.enabled                           = true
        docker.userEmulation                     = { params.use_gatk_spark ? false : true }.call()
        charliecloud.enabled                     = false
        podman.enabled                           = false
        shifter.enabled                          = false
        singularity.enabled                      = false
    } else if ("$PROFILE" == "singularity") {
        conda.enabled                            = false
        singularity.autoMounts                   = true
        singularity.enabled                      = true
        charliecloud.enabled                     = false
        docker.enabled                           = false
        podman.enabled                           = false
        shifter.enabled                          = false
    }
}
